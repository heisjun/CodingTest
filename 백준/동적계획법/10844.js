let input = require("fs").readFileSync("example.txt").toString().trim();

const N = +input;
let dp = Array.from(Array(N + 1), () => Array(10).fill(0));
for (let i = 0; i < 10; i++) {
  dp[1][i] = 1;
}

for (let i = 2; i <= N; i++) {
  for (let j = 0; j < 10; j++) {
    if (j === 0) {
      dp[i][j] = dp[i - 1][j + 1] % 1000000000;
    } else if (j === 9) {
      dp[i][j] = dp[i - 1][j - 1] % 1000000000;
    } else {
      dp[i][j] =
        (dp[i - 1][j - 1] % 1000000000) + (dp[i - 1][j + 1] % 1000000000);
    }
  }
}

let answer = dp[N].reduce((acc, cur) => acc + cur) - dp[N][0];

console.log(answer % 1000000000);

/* //1
0 1 2 3 4 5 6 7 8 9
dp[1][0] = 1
dp[1][1] =1


//2자리
10 12 23 34 45 56 67 78 89 98 87 76 65 54 43 32 21 
dp[2][0] => 0에는 아무것도 못 와 = dp[1][1] =>1
dp[2][1] => 1에는 0 또는 2가 올수 있음 ==>  dp[1][0] + dp[1][2] = 1 + 1 =2
dp[2][2] => 2에는 1또는 3이 올 수 있음 => dp[1][1] + dp[1][3] = 1+ 1 =2
dp[2][3] => 3에는 2 or 4 ==> dp[1][2]+dp[1][4] = 1 + 1 =2
dp[2][8] => 8에는 9와 7만 가능 => dp[1][7]+dp[1][9] = 1+1 = 2;
dp[2][9] => 9에는 8만 가능 ==> dp[1][8] = 1

//3자리
101 123 121 210 212 234 232 321 323 345 343 ...876  878 898 987 989 //24+ 3+3 +2 =32
dp[3][0] = 010 012 => dp[2][1] =2
dp[3][1] = 1에는 0 또는 2이 올 수 있음 ==> dp[2][0] + dp[2][2] =1+2 =3
dp[3][2] = 2에는 1 또는 3 ==> dp[2][1]+dp[2][3] = 2 + 2 = 4
dp[3][3] = dp[2][2]+dp[2][4] = 2+2 =4
dp[3][8] = dp[2][7]+dp[2][9] = 2+1 =3
dp[3][9] = dp[2][8] =2
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
1
10
123 121 
1234 1232 1212 1210 1010 101
//dp[4][0] = dp[3][1] = 3
dp[4][1] = dp[3][0]+dp[3][2] = 2 + 4 =6
 */
